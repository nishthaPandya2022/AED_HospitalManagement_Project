/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pharmacy;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.sqlite.SQLiteDataSource;
import java.sql.PreparedStatement;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ADMIN
 */
public class Medicines extends javax.swing.JFrame {

    /**
     * Creates new form Medicines
     */
    public Medicines() {
        initComponents();
        GetAllMedicines();
        GetCompany();
    }

     static Connection sqliteConnection;
     static Statement statement;
     static SQLiteDataSource ps = null;
     Connection conn = null;
     Statement st = null;
     ResultSet rs = null;
     static String MedName;
     java.sql.Date fabDate,expDate;
     java.sql.Date myFabDate, myExpDate;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pharmacyLeftJPanel = new javax.swing.JPanel();
        lblSelling = new javax.swing.JLabel();
        lblCompany = new javax.swing.JLabel();
        lblAgents = new javax.swing.JLabel();
        medicineRightJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblMedName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblFabDate = new javax.swing.JLabel();
        lblExpDate = new javax.swing.JLabel();
        lblComp = new javax.swing.JLabel();
        txtFieldPrice = new javax.swing.JTextField();
        textFieldId = new javax.swing.JTextField();
        txtFieldMedName = new javax.swing.JTextField();
        txtFieldQuantity = new javax.swing.JTextField();
        btnAddMedicine = new javax.swing.JButton();
        btnUpdateMedicine = new javax.swing.JButton();
        btnDeleteMedicine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        dateFab = new com.toedter.calendar.JDateChooser();
        dateExp = new com.toedter.calendar.JDateChooser();
        comboBoxCompany = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pharmacyLeftJPanel.setBackground(new java.awt.Color(0, 153, 51));

        lblSelling.setBackground(new java.awt.Color(255, 255, 255));
        lblSelling.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblSelling.setForeground(new java.awt.Color(255, 255, 255));
        lblSelling.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelling.setText("SELLING");
        lblSelling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSellingMouseClicked(evt);
            }
        });

        lblCompany.setBackground(new java.awt.Color(255, 255, 255));
        lblCompany.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblCompany.setForeground(new java.awt.Color(255, 255, 255));
        lblCompany.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCompany.setText("COMPANY");
        lblCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCompanyMouseClicked(evt);
            }
        });

        lblAgents.setBackground(new java.awt.Color(255, 255, 255));
        lblAgents.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAgents.setForeground(new java.awt.Color(255, 255, 255));
        lblAgents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAgents.setText("AGENTS");
        lblAgents.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAgentsMouseClicked(evt);
            }
        });

        medicineRightJPanel.setBackground(new java.awt.Color(255, 255, 255));
        medicineRightJPanel.setMaximumSize(new java.awt.Dimension(37, 37));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANAGE MEDICINE");

        lblId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblId.setForeground(new java.awt.Color(0, 153, 0));
        lblId.setText("ID");

        lblMedName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblMedName.setForeground(new java.awt.Color(0, 153, 0));
        lblMedName.setText("MEDNAME");

        lblPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPrice.setForeground(new java.awt.Color(0, 153, 0));
        lblPrice.setText("PRICE");

        lblQuantity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblQuantity.setForeground(new java.awt.Color(0, 153, 0));
        lblQuantity.setText("QUANTITY");

        lblFabDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblFabDate.setForeground(new java.awt.Color(0, 153, 0));
        lblFabDate.setText("FAB DATE");

        lblExpDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblExpDate.setForeground(new java.awt.Color(0, 153, 0));
        lblExpDate.setText("EXP DATE");

        lblComp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblComp.setForeground(new java.awt.Color(0, 153, 0));
        lblComp.setText("COMPANY");

        txtFieldPrice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFieldPrice.setForeground(new java.awt.Color(0, 153, 0));

        textFieldId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        textFieldId.setForeground(new java.awt.Color(0, 153, 0));

        txtFieldMedName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFieldMedName.setForeground(new java.awt.Color(0, 153, 0));

        txtFieldQuantity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFieldQuantity.setForeground(new java.awt.Color(0, 153, 0));

        btnAddMedicine.setBackground(new java.awt.Color(51, 204, 0));
        btnAddMedicine.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAddMedicine.setForeground(new java.awt.Color(255, 255, 255));
        btnAddMedicine.setText("ADD");
        btnAddMedicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMedicineMouseClicked(evt);
            }
        });
        btnAddMedicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMedicineActionPerformed(evt);
            }
        });

        btnUpdateMedicine.setBackground(new java.awt.Color(51, 204, 0));
        btnUpdateMedicine.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdateMedicine.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateMedicine.setText("UPDATE");
        btnUpdateMedicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMedicineMouseClicked(evt);
            }
        });

        btnDeleteMedicine.setBackground(new java.awt.Color(51, 204, 0));
        btnDeleteMedicine.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeleteMedicine.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteMedicine.setText("DELETE");
        btnDeleteMedicine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMedicineMouseClicked(evt);
            }
        });

        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "MEDNAME", "PRICE", "QUANTITY", "FABDATE", "EXPDATE", "COMPANY"
            }
        ));
        MedicineTable.setRowHeight(25);
        MedicineTable.setSelectionBackground(new java.awt.Color(0, 153, 0));
        MedicineTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(MedicineTable);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setText("MEDICINES LIST");

        comboBoxCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboBoxCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCompanyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout medicineRightJPanelLayout = new javax.swing.GroupLayout(medicineRightJPanel);
        medicineRightJPanel.setLayout(medicineRightJPanelLayout);
        medicineRightJPanelLayout.setHorizontalGroup(
            medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, medicineRightJPanelLayout.createSequentialGroup()
                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMedName)
                                    .addComponent(lblPrice))
                                .addGap(242, 242, 242))
                            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblId)
                                    .addComponent(lblQuantity))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldMedName, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(92, 92, 92)))
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(lblComp))
                            .addComponent(lblFabDate)
                            .addComponent(lblExpDate))
                        .addGap(31, 31, 31))
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                                .addComponent(btnAddMedicine)
                                .addGap(32, 32, 32)
                                .addComponent(btnUpdateMedicine)
                                .addGap(12, 12, 12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateFab, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(dateExp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnDeleteMedicine))
                    .addComponent(comboBoxCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(255, 255, 255))
            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGap(213, 213, 213)
                        .addComponent(jLabel1)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        medicineRightJPanelLayout.setVerticalGroup(
            medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(lblId)
                        .addGap(18, 18, 18)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMedName)
                            .addComponent(txtFieldMedName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice)
                            .addComponent(txtFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addGap(34, 34, 34)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblFabDate))
                            .addComponent(dateFab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dateExp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblExpDate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtFieldQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblQuantity))
                    .addGroup(medicineRightJPanelLayout.createSequentialGroup()
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblComp)
                            .addComponent(comboBoxCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(medicineRightJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDeleteMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout pharmacyLeftJPanelLayout = new javax.swing.GroupLayout(pharmacyLeftJPanel);
        pharmacyLeftJPanel.setLayout(pharmacyLeftJPanelLayout);
        pharmacyLeftJPanelLayout.setHorizontalGroup(
            pharmacyLeftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pharmacyLeftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pharmacyLeftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pharmacyLeftJPanelLayout.createSequentialGroup()
                        .addGroup(pharmacyLeftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAgents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSelling, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lblCompany, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(medicineRightJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );
        pharmacyLeftJPanelLayout.setVerticalGroup(
            pharmacyLeftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pharmacyLeftJPanelLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(lblCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAgents, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSelling, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(224, 224, 224))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pharmacyLeftJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(medicineRightJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pharmacyLeftJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pharmacyLeftJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSellingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSellingMouseClicked
        new Selling().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblSellingMouseClicked

    private void btnAddMedicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMedicineMouseClicked

        Date fabDate = dateFab.getDate();
        java.sql.Date myFabDate = new java.sql.Date(fabDate.getTime());
        Date expDate = dateExp.getDate();
        java.sql.Date myExpDate = new java.sql.Date(expDate.getTime());

        try {
            
            ps = new SQLiteDataSource();
            
            ps.setUrl("jdbc:sqlite:hospManagement.db");
            sqliteConnection = ps.getConnection();
            String command = "insert into medicine (MedId, MedName, MedPrice, MedQty, MedFab, MedExp, MedComp ) values (?,?,?,?,?,?,?)";

            PreparedStatement p2p = sqliteConnection.prepareStatement(command);
            
            p2p.setInt(1, Integer.valueOf(textFieldId.getText()));
            p2p.setString(2, txtFieldMedName.getText());
            p2p.setDouble(3, Double.valueOf(txtFieldPrice.getText()));
            p2p.setInt(4, Integer.valueOf(txtFieldQuantity.getText()));
            p2p.setDate(5, myFabDate);
            p2p.setDate(6, myExpDate);
            p2p.setString(7, comboBoxCompany.getSelectedItem().toString());
            
            
            boolean output = p2p.execute();
            JOptionPane.showMessageDialog(this, "Medicine Successfully Added!");
            sqliteConnection.close();
            GetAllMedicines();

        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddMedicineMouseClicked

    private void btnUpdateMedicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMedicineMouseClicked
        if (textFieldId.getText().isEmpty() || txtFieldMedName.getText().isEmpty() || txtFieldPrice.getText().isEmpty() || txtFieldQuantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing Information about Medicine");
        }
        else
        {
            try {
                ps = new SQLiteDataSource();
            
                ps.setUrl("jdbc:sqlite:hospManagement.db");
                sqliteConnection = ps.getConnection();
                String id = textFieldId.getText();
                Date fabDate = dateFab.getDate();
                java.sql.Date myFabDate = new java.sql.Date(fabDate.getTime());
                Date expDate = dateExp.getDate();
                java.sql.Date myExpDate = new java.sql.Date(expDate.getTime());
                String queryUpdate = "update medicine set MedName = '" + txtFieldMedName.getText() + "'" + ",MedPrice = " + txtFieldPrice.getText() + "" + ",MedQty= " + txtFieldQuantity.getText() + "" + ",MedFab = '" + myFabDate + "'" + ",MedExp = '" + myExpDate + "'" + ",MedComp = '" + comboBoxCompany.getSelectedItem().toString() + "'" + "where MedId = " + id;

                PreparedStatement p2p = sqliteConnection.prepareStatement(queryUpdate);
                boolean output = p2p.execute();

                JOptionPane.showMessageDialog(this, "Medicine Successfully Updated!");
                sqliteConnection.close();
                GetAllMedicines();

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnUpdateMedicineMouseClicked

    private void btnDeleteMedicineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMedicineMouseClicked

        if (textFieldId.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Enter ID of The Medicine To Be Deleted....");
        }
        else
        {
            try {
                ps = new SQLiteDataSource();
            
                ps.setUrl("jdbc:sqlite:hospManagement.db");
                sqliteConnection = ps.getConnection();
                String id = textFieldId.getText();
                String query = "Delete from medicine where MedId = " + id;
                
                PreparedStatement p2p = sqliteConnection.prepareStatement(query);
                boolean output = p2p.execute();


                GetAllMedicines();
                JOptionPane.showMessageDialog(this, "Medicine Successfully Deleted!");

            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnDeleteMedicineMouseClicked

    private void MedicineTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineTableMouseClicked

        DefaultTableModel model = (DefaultTableModel)MedicineTable.getModel();
        int myIndex = MedicineTable.getSelectedRow();
        textFieldId.setText(model.getValueAt(myIndex, 0).toString());
        txtFieldMedName.setText(model.getValueAt(myIndex, 1).toString());
        txtFieldPrice.setText(model.getValueAt(myIndex, 2).toString());
        txtFieldQuantity.setText(model.getValueAt(myIndex, 3).toString());
        dateFab.setDate((Date) myFabDate);
        dateExp.setDate((Date) myExpDate );
        
    }//GEN-LAST:event_MedicineTableMouseClicked

    private void lblCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCompanyMouseClicked
        new Company().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblCompanyMouseClicked

    private void lblAgentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAgentsMouseClicked
        new Agents().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblAgentsMouseClicked

    private void comboBoxCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCompanyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxCompanyActionPerformed

    private void btnAddMedicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMedicineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddMedicineActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Medicines.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Medicines().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MedicineTable;
    private javax.swing.JButton btnAddMedicine;
    private javax.swing.JButton btnDeleteMedicine;
    private javax.swing.JButton btnUpdateMedicine;
    private javax.swing.JComboBox<String> comboBoxCompany;
    private com.toedter.calendar.JDateChooser dateExp;
    private com.toedter.calendar.JDateChooser dateFab;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAgents;
    private javax.swing.JLabel lblComp;
    private javax.swing.JLabel lblCompany;
    private javax.swing.JLabel lblExpDate;
    private javax.swing.JLabel lblFabDate;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblMedName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblSelling;
    private javax.swing.JPanel medicineRightJPanel;
    private javax.swing.JPanel pharmacyLeftJPanel;
    private javax.swing.JTextField textFieldId;
    private javax.swing.JTextField txtFieldMedName;
    private javax.swing.JTextField txtFieldPrice;
    private javax.swing.JTextField txtFieldQuantity;
    // End of variables declaration//GEN-END:variables

    private void GetAllMedicines() {
         try {
           ps = new SQLiteDataSource();
            
           ps.setUrl("jdbc:sqlite:hospManagement.db");
           sqliteConnection = ps.getConnection();
        
           String command = "Select * from medicine";
           Statement p2p = sqliteConnection.createStatement();
           ResultSet rs = p2p.executeQuery(command);
           MedicineTable.setModel(DbUtils.resultSetToTableModel(rs));
            
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void GetCompany() {
        try {
              
           ps = new SQLiteDataSource();
            
           ps.setUrl("jdbc:sqlite:hospManagement.db");
           sqliteConnection = ps.getConnection();
           String command = "Select * from company";
           Statement p2p = sqliteConnection.createStatement();
           ResultSet rs = p2p.executeQuery(command);
           
           while(rs.next())
           {
               String myCompany = rs.getString("CompName");
               comboBoxCompany.addItem(myCompany);
           }
            
        } catch (SQLException ex) {
            
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    

   
}
